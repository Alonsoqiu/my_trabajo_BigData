[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "La lotería de Navidad",
    "section": "",
    "text": "Los pingüinos molan\n\n\n\n\n\n\n\ntrabajo BigData\n\n\npinguinos\n\n\n\n\nViendo si con los datos de pingüinos se aprecia la paradoja de Simpson\n\n\n\n\n\n\n1 nov 2022\n\n\nPedro Navaja\n\n\n\n\n\n\n  \n\n\n\n\nLos pingüinos molan (II)\n\n\n\n\n\n\n\ntrabajo BigData\n\n\npinguinos\n\n\n\n\nEste post tiene el mismo contenido que el anterior pero lo hemos tuneado (de una forma un poco rara) con CSS, tambíen le hemos cambiado el thumbnail\n\n\n\n\n\n\n1 nov 2022\n\n\nPedro Navaja\n\n\n\n\n\n\nNo hay resultados\n\nReutilizaciónhttps://creativecommons.org/licenses/by/4.0/deed.es"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "La lotería de Navidad",
    "section": "",
    "text": "Hola, soy Qiu Kaikai.\nEsto blog es para presentar el trabajo individual para la asignatura “Programación y manejo de datos en la era Del Big Data”, optativa de GECO en la Facultad de Economía de la Universitat de València.\nLa web de la asignatura está aquí y los trabajos de mis compañeros de curso puedes verlos aquí.\nMi trabajo lleva por título : “La lotería de Navidad”. El objetivo es emunerar y analizar unas curiosidades de la lotería de navidad para que tenga unas posibilidades más de recuperar el dinero incluso ganar dinero, aunque creo que esto no pasaría O(∩_∩)O\nEl trabajo puede verse aquí.\n\n\nReutilizaciónhttps://creativecommons.org/licenses/by/4.0/deed.es"
  },
  {
    "objectID": "my_trabajo_BigData.html",
    "href": "my_trabajo_BigData.html",
    "title": "La lotería de Navidad",
    "section": "",
    "text": "La introducción:El Sorteo Extraordinario de Navidad, también conocido como Lotería de Navidad, es uno de los sorteos de lotería más importantes y populares que se celebra en España cada 22 de diciembre. Se divide principalmente en 5 clases: el gordo, 4 000 000 €; 2º premio, 1 250 000 €; 3º premio, 500 000 €; 4º premio, con dos números, 200 000 € cada uno; 5º premio, con 8 números, 60 000 € cada uno; reintegro, 20 € si el último número es el mismo que el último número de gordo.El número específico de ganancias para cada billete de lotería depende del número de serie.\n\n\nPrimero hay que instalar y cargar unos paquetes necesarios.\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(gganimate)\nlibrary(palmerpenguins)\nlibrary(colorspace)\nlibrary(\"readxl\")\nlibrary(viridis)\nlibrary(geojsonsf)\nlibrary(ggthemes)\nlibrary(treemap)\nlibrary(openxlsx)\nlibrary(treemapify)"
  },
  {
    "objectID": "my_trabajo_BigData.html#dónde-se-ha-tocado-más-el-gordo",
    "href": "my_trabajo_BigData.html#dónde-se-ha-tocado-más-el-gordo",
    "title": "La lotería de Navidad",
    "section": "2.¿Dónde se ha tocado más el gordo?",
    "text": "2.¿Dónde se ha tocado más el gordo?\nAquí está la distribución de gordo en España a lo largo de su historia, tanto en orden alfabético como su valor\n\nDatos no reordendasDatos reordenados\n\n\n\n\nCódigo\nla_direccion <- \"./datos/provincia y gordo.csv\"\nprovincia_gordo <- rio::import(la_direccion)\nprov <- pjpv.curso.R.2022::LAU2_prov_2020_canarias\n\nggplot(provincia_gordo,aes(province,veces,fill=province))+geom_bar(stat='identity')+coord_flip()+geom_text(aes(label=veces),\n            position = position_dodge2(width = 0.5, preserve = 'single'),\n            size= 3, hjust = 0 )+\n          lims(y=c(0,125))+\n          scale_y_continuous(limits = c(0,125), expand = c(0, 0))+\n  labs(title = \"Número de veces que ha tocado cada provincia en orden alfabetico\",\n       subtitle = \"(un rollo)\")\n\n\n\n\n\n\n\n\n\nCódigo\n#con orden\nggplot(provincia_gordo,aes(x= reorder(province,veces),y= veces,fill=province))+geom_bar(stat='identity')+coord_flip()+geom_text(aes(label=veces), position = position_dodge2(width = 0.5, preserve = 'single'),size= 3, hjust = 0 )+\n  lims(y=c(0,125))+\n  scale_y_continuous(limits = c(0,125), expand = c(0, 0))+\n  labs(title = \"Número de veces que ha tocado el gordo cada provincia en funcion de veces\",\n       x = \"Provincias\")+\n  theme(title=element_text(family=\"myFont\",size=14,color=\"black\",face=\"italic\"),\n      axis.title.x=element_text(size=10,face=\"bold\",color=\"black\",hjust=0.5),\n      legend.title=element_text(size=14,color=\"red\",hjust=0.5))\n\n\n\n\n\n\n\n\n\n2.1 Datos reordenados pero con treemap\nCon treepmap, podemos tener una comprensión más intuitiva del número y la comparación del número de veces que se ha tocado entre las provincias: podemos ver que Madrid es la comunidad / provincia más afortunada:107 veces, seguida por Barcelona. Y lo peor es Melilla, a quien nunca le ha tocado el Gordo en los 200 años de historia de la lotería de Navidad.\n\n\nCódigo\n#Tree map\nlibrary(treemap)\nlibrary(openxlsx)\ninstall.packages(\"treemapify\")\nlibrary(treemapify)\nptree <- ggplot(data = provincia_gordo,aes(fill= province,area= veces, label= paste0(province,\"\\n\",veces)))\nptree <- ptree + geom_treemap()\nptree <- ptree + geom_treemap_text(colour=\"white\", place= \"centre\")\nptree <- ptree + theme(legend.position = \"none\")\nptree <- ptree + labs(title = \"treemap de gordo:Número de veces que ha tocado el gordo cada                         provincia\",\n                      subtitle = \"(Melilla: 0)\")+ \n  theme(title=element_text(family=\"myFont\",size=14,color=\"black\",face=\"italic\"))\nptree"
  },
  {
    "objectID": "my_trabajo_BigData.html#la-provincia-más-afortunada",
    "href": "my_trabajo_BigData.html#la-provincia-más-afortunada",
    "title": "La lotería de Navidad",
    "section": "3.La provincia más afortunada",
    "text": "3.La provincia más afortunada\nSin embargo, la lotería de navidad no es el “Gordo” solamente, los premios del segundo, tercer, cuarto y quinto premio también son muy atractivos, aunque los premios son menores que lo del gordo. Para calcular de manera más justa la “provincia más afortunada”, asignamos puntos según la proporción de premio: 200/3 al Gordo, 125/6 a segundo premio, 25/3 a tercer premio, 10/3 a cuarto premio y 1 a quinto premio.\n\nSolo considero la distribución del mismo número en todo el país por provincias, no considero números de series que están disponible en cada provincia ni “Centena (tres primeras cifras) del primero premio,etc”, porque ya es mucho trabajo y tengo que copiar los datos desde los períodicos y recopilarlos. ——————Qiu Kaikai\n\nPodemos que la provincia más afortunada es Cantabria, seguida por Madrid.\n\n\nCódigo\n##3.la provincia más afortunada(de todas las provincias)\n\ntodo <- read_excel(\"./datos/todo.xlsx\")\ntodop <- todo %>% mutate(punto= primero*200/3+ segundo*125/6+ tercero*25/3+ cuarto*10/3+ quinto)\nprov <- pjpv.curso.R.2022::LAU2_prov_2020_canarias\ndf_todo <-  full_join(todop, prov, by = c(\"ine\" = \"ine_prov\"))\n\nptodo <- ggplot() + \n  geom_sf(data = df_todo, \n          aes(geometry = geometry,fill = punto), \n          size = 0.09) +\n  scale_fill_viridis_c(option = \"plasma\")+\n  labs(title = \"Puntos según todos los premio de 2021\", \n       caption = \"datos viene de loteriasyapuestas.es\") +\n  theme(plot.title=element_text\n        (family=\"Times\",size=18,hjust = 0.5,color=\"black\",face=\"bold\"),\n        legend.title=element_text(size=12,face=\"bold\",color=\"black\",hjust=0.5))+\n  theme(plot.background = element_rect(fill = \"white\"),\n        panel.background = element_rect(fill = \"grey\"))+\n  annotate(geom = \"text\",x= -4.03,y= 45.2,label=\"La provincia más afortunada: \\n Cantabria\",size=4.5)+\n  geom_segment(aes(x= -4.03, y= 44.6, xend= -4.03, yend= 43.2), size=1.5, arrow = arrow(length = unit(0.3,\"cm\")))\n  \nptodo"
  },
  {
    "objectID": "my_trabajo_BigData.html#el-gasto-medio-por-habitante-en-loteria-por-ccaa-y-provincia-2021",
    "href": "my_trabajo_BigData.html#el-gasto-medio-por-habitante-en-loteria-por-ccaa-y-provincia-2021",
    "title": "La lotería de Navidad",
    "section": "4. El gasto medio por habitante en loteria por CCAA y provincia, 2021",
    "text": "4. El gasto medio por habitante en loteria por CCAA y provincia, 2021\nComprar boletos de lotería de Navidad parece ser una costumbre navideña nacional, cuanto más cerca del 22 de diciembre, más larga es la fila afuera de Loterías y Apuestas del Estado. Pero las personas en diferentes lugares gastan diferentes cantidades de dinero en la lotería de Navidad. Los dos gráficos siguientes muestran el gasto medio de los residentes de diferentes comunidades autónomas y provincias en la lotería de Navidad.\n\n4.1 A nivel Comunidades Autónomas\nPuede poner el cursor por el territorio de cada comunidad autónoma para conocer el dato concreto. Podemos ver que Castilla y León es el líder de todo el país, mientras que en Ceuta y Melilla los gastos son menor de 20 euros.\n\n\nCódigo\n##4.El gasto medio por habitante en loteria por CCAA y provincia, 2021\nlibrary(\"readxl\")\nmy_data <- read_excel(\"./datos/gasto_ccaa.xlsx\")\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(viridis)\nprov <- pjpv.curso.R.2022::LAU2_prov_2020_canarias\nprov <- prov %>% select(ine_prov, ine_prov.n, ine_ccaa, ine_ccaa.n)\ndf_geo_ccaa <- prov %>% \n  group_by(ine_ccaa, ine_ccaa.n) %>% summarize() %>% ungroup() \ndf_ok <-  full_join(df_geo_ccaa, my_data, by = c(\"ine_ccaa\" = \"codigo\"))\n##CCAA color\ndf_ok = sf::st_cast(df_ok, \"MULTIPOLYGON\")\np <- ggplot(data = df_ok, \n            aes(geometry = geometry,fill = gasto), \n            size = 0.09) + \n     geom_sf() + scale_fill_viridis(option=\"magma\")+\n    labs(title = \"Gasto medio por habitante en lotería de navidad, CCAA\", \n       caption = \"datos viene de loteriasyapuestas.es\",\n       fill = \"gasto medio\") +\n     theme(plot.title=element_text\n        (family=\"Times\",size=18,hjust = 0.5,color=\"black\",face=\"bold\"),\n         legend.title=element_text(size=12,face=\"bold\",color=\"black\",hjust=0.5))\n\n\nggplotly(p)\n\n\n\n\n\n\n\n\n4.2 A nivel provincias\nEntre las 52 regiones de nivel provincia por todo el país, Soria ha ganado campeonato con dato increíble: 224€. Esto implica que cada soriano va a comprar más de 11 décimos por cada año. Sin embargo, en los gráficos anteriores sobre “la provincia más afortuna”, no aparece Soria. Podemos concluir que Soria es la provincia más desafortunada de España🤣🤣🤣🤣\n\n\nCódigo\nlibrary(geojsonsf)\nprovincia <- pjpv.curso.R.2022::LAU2_prov_2020_canarias\nmi_data <- read_excel(\"./datos/gastop.xlsx\")\ngasto_provincia_1 <- full_join(mi_data,provincia,by=c(\"ine\"=\"ine_prov\")) \nlibrary(plotly)\nlibrary(sf)\npprovincia <- ggplot() + \n  geom_sf(data = gasto_provincia_1, \n          aes(geometry = geometry,fill = gasto_medio), \n          size = 0.09) +\n  scale_fill_viridis_c(option = \"plasma\")+\n  labs(title = \"Gasto medio por habitante en lotería de navidad por provincia\", \n       caption = \"datos viene de loteriasyapuestas.es\") +\n  theme(plot.title=element_text\n        (family=\"Times\",size=14,hjust = 0.5,color=\"black\",face=\"bold\"),\n        legend.title=element_text(size=12,face=\"bold\",color=\"black\",hjust=0.5))+\n  theme(plot.background = element_rect(fill = \"grey\"),\n        panel.background = element_rect(fill = \"grey\"))+\n  annotate(geom = \"text\",x= -2.46,y= 41.76,label=\"Soria \\n 224€\",size=3)+\n  annotate(geom = \"text\",x= -2.93,y= 35.29,label=\"Melilla \\n 14€\",size=3)+\n  annotate(geom = \"text\",x= 2.5,y= 37,label=\"Media de España \\n 66.6€\",size=5,alpha=1)\npprovincia"
  },
  {
    "objectID": "my_trabajo_BigData.html#relación-entre-gasto-medio-de-lotería-y-renta-media",
    "href": "my_trabajo_BigData.html#relación-entre-gasto-medio-de-lotería-y-renta-media",
    "title": "La lotería de Navidad",
    "section": "5.Relación entre gasto medio de lotería y renta media",
    "text": "5.Relación entre gasto medio de lotería y renta media\nEntonces, ¿por qué se gasta tanto dinero en Soria? voy a analizar relación entre gasto medio de lotería y renta media.\n\n\nCódigo\n##relación entre gasto medio de lotería y renta media\nrenta <- read_excel(\"./datos/gastoyrenta.xlsx\")\ndf_renta <- ggplot(renta,aes(gasto_medio,renta_neta_media))+ geom_point(color=\"Green\",size=3) + geom_text(aes(label=provincia),size=3,vjust=-1)+\n  geom_smooth(method = \"lm\",color= \"Red\",se = FALSE)+\n  theme_light()+\n  scale_x_continuous(breaks = seq(0, 250, 25),limits = c(0,250))+\n  labs(title = \n         \"La relación entre la renta neta media y gasto medio en la lotería de Navidad\", \n       subtitle = \"(por provincias)\",\n       caption = \"datos viene de INE y loteriasyapuestas.es\",\n       x = \"gasto medio en la lotería de Navidad\",\n       y = \"renta neta media\")+\n  theme(plot.title=element_text(family=\"Times\",size=16,hjust = 0.5,color=\"black\",face=\"bold\"),\n       plot.subtitle=element_text(size=10,face=\"bold\",color=\"black\",hjust=1),\n        axis.title.x=element_text(size=10,face=\"bold\",color=\"black\",hjust=0.5),\n        axis.title.y=element_text(size=10,face=\"bold\",color=\"black\",hjust=0.5),\n        legend.title=element_text(size=12,face=\"bold\",color=\"black\",hjust=0.5))+\n  annotate(geom = \"text\",x= 175,y= 12000,label=\"gasto medio=0.0063renta neta-6.87\",size=4)\n\nggplotly(df_renta)\n\n\n\n\n\n\nPodemos decir por cada aumento 1000 de renta media neta por habitante, va a gastar 6 euros en la lotería de Navidad."
  },
  {
    "objectID": "my_trabajo_BigData.html#el-número-más-afortunado",
    "href": "my_trabajo_BigData.html#el-número-más-afortunado",
    "title": "La lotería de Navidad",
    "section": "6.El número más afortunado",
    "text": "6.El número más afortunado\nLos números de Gordo también son muy ¨importantes¨, en especial el último número, El reintegro: si el último de nuestro décimo le coincide, recuperaremos nuestro 20 euros. En este gráfico, resumimos las veces que cada número ha aparecido como el reintegro en la historia.\n\n\nCódigo\n##6.El reintegro\nlibrary(ggthemes)\nel_link <- \"./datos/numeros1812 .csv\"\nreintegro <- rio::import(el_link)\nreintegro <- reintegro %>% tidyr::separate(gordo,sep = \"\",into=c(\"primero\",\"segundo\",\"terceo\",\"cuarto\",\"quinto\",\"sexto\")) %>%\n  mutate(ultimo=ifelse(is.na(sexto),quinto,sexto)) %>%\n  mutate(ultimonumero=ifelse(is.na(ultimo),cuarto,ultimo)) %>% select(1:9)\nreintegro1 <- reintegro %>% group_by(ultimonumero)%>% summarise(NN=n()) \n\nggplot(data = reintegro1,aes(ultimonumero,NN,fill= ultimonumero )) + \n  geom_bar(stat='identity') +\n  geom_text(aes(label=NN),\n             position = position_dodge2(width = 0.5, preserve = 'single'),\n             size= 6, hjust = 0.5 )+\n  scale_y_continuous(limits = c(0,35), expand = c(0, 0)) +\n  labs(title = \"5，el reintegro más frecuente\",\n       x = \"Los números\",\n       y = \"veces\")+\n  scale_fill_discrete(name = \"Los números\")+\n         theme_solarized()+\n  theme(plot.title=element_text(family=\"Times\",size=16,hjust = 0.5,color=\"black\",face=\"bold\"),\n        axis.title.x=element_text(size=10,face=\"bold\",color=\"black\",hjust=0.5),\n        axis.title.y=element_text(size=10,face=\"bold\",color=\"black\",hjust=0.5),\n        legend.title=element_text(size=12,face=\"bold\",color=\"black\",hjust=0.5))+\n  scale_color_brewer(palette = \"Dark2\")\n\n\n\n\n\nPodemos ver el número 4, 5 y 6 son los afortunados."
  },
  {
    "objectID": "my_trabajo_BigData.html#unas-administraciones-de-lotería-famosas",
    "href": "my_trabajo_BigData.html#unas-administraciones-de-lotería-famosas",
    "title": "La lotería de Navidad",
    "section": "7.Unas administraciones de lotería famosas",
    "text": "7.Unas administraciones de lotería famosas\nDurante los más de 200 años de historia de la lotería de Navidad, ha habido muchos lugares de lotería famosos que he marcado en el mapa a continuación. Lo más famoso, por supuesto es Doña Manolita de Madrid, un auténtico símbolo de la capital española. Esta administración vende alrededor de 70 millones de décimos al año, sobre todo en esta época del año y en relación al Sorteo Extraordinario.\nEn cuanto a nuestra Comunitat, se destaca Lotería Manises. La administración de lotería Manises ha conseguido repartir El Gordo durante los años 1971, 1986, 2001, 2013, y 2018, lo que ha convertido al municipio de 30.000 habitantes en la localidad de España donde más veces ha caído el primer premio de la Lotería de Navidad.\n\n\nCódigo\nm <- leaflet() %>%\n  addTiles() %>% \n  setView(lng = -3.70474, lat = 40.41897, zoom = 6) %>% \n  addMarkers(lng = -3.70474, lat = 40.41897, popup = \"Doña Manolita\") %>% \n  addMarkers(lng = -0.45648, lat = 39.49060, popup = \"Lotería Manises\") %>% \n  addMarkers(lng =  2.16538, lat = 41.38885, popup = \"El gato negro\") %>% \n  addMarkers(lng = -1.13289, lat = 37.98457, popup = \"La envidiosa millonaria de Murcia\") %>%\n  addMarkers(lng = -2.93637, lat = 43.26162, popup = \"Ormaechea de Bilbao\") %>% \n  addMarkers(lng = -5.99445, lat = 37.39087, popup = \"Sagasta los millones de Sevilla\") %>%\n  addMarkers(lng = -4.78587, lat = 41.62857, popup = \"La rana de oro de Valladolid\") %>%\n  addPopups(lng = -3.70474, lat = 40.41897, popup = \"Doña Manolita\") %>% \n  addPopups(lng = -0.45648, lat = 39.49060, popup = \"Lotería Manises\") %>% \n  addPopups(lng =  2.16538, lat = 41.38885, popup = \"El gato negro\") \nm"
  },
  {
    "objectID": "my_trabajo_BigData.html#conclusión",
    "href": "my_trabajo_BigData.html#conclusión",
    "title": "La lotería de Navidad",
    "section": "8. Conclusión",
    "text": "8. Conclusión\nPersonalmente, “comprar lotería” es un evento aleatorio, y no podemos encontrar ninguna regla. Esas “provincias de la suerte y tiendas de lotería” son solo por las grandes ventas. Si realmente quiere aumentar sus posibilidades de ganar, todavía tiene que ir a esas grandes ciudades para comprar; si solo quiere recuperar su dinero, comprar números que terminen en 4~6 sería una buena opción. Pero no invierta demasiado dinero, no vale la pena invertir en un evento de pequeña probabilidad. Finalmente, ¡suerte a todos!\n(Os adjunto el vídeo que hicieron el sorteo)\n\n\n\n\n\n\n\n\n\n\n\nBibliografía\n-Lotería de Navidad: números premiados, en datos y gráficos\n-20minutos\n-El país\n-Estos son los quintos premios en la Lotería de Navidad: 89109, 34345, 89053, 69457, 92052, 70316, 26711 y 24198"
  },
  {
    "objectID": "posts/post_01_pinguinos.html",
    "href": "posts/post_01_pinguinos.html",
    "title": "Los pingüinos molan",
    "section": "",
    "text": "Vamos a utilizar datos del paquete palmerpenguins. El repo del paquete en CRAN está aquí, el repo de Github está aquí y la página web del paquete está aquí.\nLos datos se pueden cargar en la memoria de de R/RStudio de esta forma:\n\n# install.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\ndf <- palmerpenguins::penguins\n\nEl dataset contiene observaciones sobre un conjunto de 344 pingüinos de 3 especies. Hay 8 variables."
  },
  {
    "objectID": "posts/post_01_pinguinos.html#los-pingüinos-molan",
    "href": "posts/post_01_pinguinos.html#los-pingüinos-molan",
    "title": "Los pingüinos molan",
    "section": "\n2 Los pingüinos molan",
    "text": "2 Los pingüinos molan\nVamos a ver una foto de un pingüinos\n\n\n\n\n\nUn pingüino chulo\n\n\nSí, lo pingüinos molan, así que vamos a poner otra foto de pingüinos que tenemos en nuestro PC pero la vamos a poner en el margen:"
  },
  {
    "objectID": "posts/post_01_pinguinos.html#algunos-gráficos",
    "href": "posts/post_01_pinguinos.html#algunos-gráficos",
    "title": "Los pingüinos molan",
    "section": "\n3 Algunos gráficos",
    "text": "3 Algunos gráficos\nBueno pues vamos a hacer algún gráfico, pero claro antes he de cargar los paquetes\n\nlibrary(tidyverse)\n\nArreglo los datos\n\n#- cojos datos de pingüinos y arreglo un poco \ndf <- palmerpenguins::penguins %>% \n  dplyr::select(species, bill_depth_mm, body_mass_g) %>% \n  tidyr::drop_na()\n\n\n3.1 Primer gráfico\n\n#- primer gráfico\np <- ggplot(data = df, \n       mapping = aes(x = bill_depth_mm, y = body_mass_g, color = species)) +\n     geom_point()\np\n\n\n\n\n\n\n\n\n3.2 Segundo\n\n#- segundo gráfico\np <- p + geom_smooth(method = \"lm\", se = FALSE) \n\np\n\n\n\n\n\n\n\n\n3.3 El último\n\n#- tercer gráfico\np + geom_smooth(method = \"lm\", se = FALSE, color = \"black\") \n\n\n\n\n\n\n\n\nCon esto acabo mi trabajo para BigData!!\n\nAbajo muestro mi entorno de trabajo y paquetes utilizados\n\n\n current session info \n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.2.1 (2022-06-23)\n os       Ubuntu 20.04.5 LTS\n system   x86_64, linux-gnu\n ui       X11\n language (EN)\n collate  es_ES.UTF-8\n ctype    es_ES.UTF-8\n tz       Europe/Madrid\n date     2022-11-18\n pandoc   2.18 @ /usr/lib/rstudio/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package        * version date (UTC) lib source\n assertthat       0.2.1   2019-03-21 [3] CRAN (R 4.0.0)\n backports        1.4.1   2021-12-13 [3] CRAN (R 4.1.2)\n broom            1.0.1   2022-08-29 [3] CRAN (R 4.2.1)\n cellranger       1.1.0   2016-07-27 [3] CRAN (R 4.0.0)\n cli              3.4.1   2022-09-23 [3] CRAN (R 4.2.1)\n clipr            0.8.0   2022-02-22 [3] CRAN (R 4.1.2)\n colorspace       2.0-3   2022-02-21 [3] CRAN (R 4.1.2)\n crayon           1.5.2   2022-09-29 [3] CRAN (R 4.2.1)\n DBI              1.1.3   2022-06-18 [3] CRAN (R 4.2.1)\n dbplyr           2.2.1   2022-06-27 [3] CRAN (R 4.2.1)\n desc             1.4.1   2022-03-06 [1] CRAN (R 4.2.0)\n details          0.3.0   2022-03-27 [1] CRAN (R 4.2.1)\n digest           0.6.30  2022-10-18 [1] CRAN (R 4.2.1)\n dplyr          * 1.0.10  2022-09-01 [1] CRAN (R 4.2.1)\n ellipsis         0.3.2   2021-04-29 [3] CRAN (R 4.0.5)\n evaluate         0.17    2022-10-07 [3] CRAN (R 4.2.1)\n fansi            1.0.3   2022-03-24 [3] CRAN (R 4.1.3)\n farver           2.1.1   2022-07-06 [3] CRAN (R 4.2.1)\n fastmap          1.1.0   2021-01-25 [3] CRAN (R 4.0.3)\n forcats        * 0.5.2   2022-08-19 [3] CRAN (R 4.2.1)\n fs               1.5.2   2021-12-08 [3] CRAN (R 4.1.2)\n generics         0.1.3   2022-07-05 [3] CRAN (R 4.2.1)\n ggplot2        * 3.3.6   2022-05-03 [3] CRAN (R 4.2.0)\n glue             1.6.2   2022-02-24 [3] CRAN (R 4.1.2)\n gtable           0.3.1   2022-09-01 [1] CRAN (R 4.2.1)\n haven            2.5.1   2022-08-22 [3] CRAN (R 4.2.1)\n hms              1.1.2   2022-08-19 [3] CRAN (R 4.2.1)\n htmltools        0.5.3   2022-07-18 [3] CRAN (R 4.2.1)\n htmlwidgets      1.5.4   2021-09-08 [1] CRAN (R 4.2.0)\n httr             1.4.4   2022-08-17 [3] CRAN (R 4.2.1)\n jsonlite         1.8.3   2022-10-21 [1] CRAN (R 4.2.1)\n knitr            1.40    2022-08-24 [1] CRAN (R 4.2.1)\n labeling         0.4.2   2020-10-20 [3] CRAN (R 4.0.3)\n lattice          0.20-45 2021-09-22 [4] CRAN (R 4.2.0)\n lifecycle        1.0.3   2022-10-07 [3] CRAN (R 4.2.1)\n lubridate        1.8.0   2021-10-07 [3] CRAN (R 4.1.1)\n magrittr         2.0.3   2022-03-30 [3] CRAN (R 4.1.3)\n Matrix           1.5-1   2022-09-13 [4] CRAN (R 4.2.1)\n mgcv             1.8-40  2022-03-29 [4] CRAN (R 4.1.3)\n modelr           0.1.9   2022-08-19 [3] CRAN (R 4.2.1)\n munsell          0.5.0   2018-06-12 [3] CRAN (R 4.0.0)\n nlme             3.1-160 2022-10-10 [4] CRAN (R 4.2.1)\n palmerpenguins * 0.1.0   2020-07-23 [1] CRAN (R 4.2.0)\n pillar           1.8.1   2022-08-19 [3] CRAN (R 4.2.1)\n pkgconfig        2.0.3   2019-09-22 [3] CRAN (R 4.0.0)\n png              0.1-7   2013-12-03 [1] CRAN (R 4.2.0)\n purrr          * 0.3.5   2022-10-06 [3] CRAN (R 4.2.1)\n R6               2.5.1   2021-08-19 [3] CRAN (R 4.1.1)\n readr          * 2.1.3   2022-10-01 [3] CRAN (R 4.2.1)\n readxl           1.4.1   2022-08-17 [3] CRAN (R 4.2.1)\n reprex           2.0.2   2022-08-17 [3] CRAN (R 4.2.1)\n rlang            1.0.6   2022-09-24 [1] CRAN (R 4.2.1)\n rmarkdown        2.17    2022-10-07 [3] CRAN (R 4.2.1)\n rprojroot        2.0.3   2022-04-02 [1] CRAN (R 4.2.0)\n rstudioapi       0.14    2022-08-22 [3] CRAN (R 4.2.1)\n rvest            1.0.3   2022-08-19 [3] CRAN (R 4.2.1)\n scales           1.2.1   2022-08-20 [3] CRAN (R 4.2.1)\n sessioninfo      1.2.2   2021-12-06 [1] CRAN (R 4.2.0)\n stringi          1.7.8   2022-07-11 [3] CRAN (R 4.2.1)\n stringr        * 1.4.1   2022-08-20 [3] CRAN (R 4.2.1)\n tibble         * 3.1.8   2022-07-22 [1] CRAN (R 4.2.1)\n tidyr          * 1.2.1   2022-09-08 [3] CRAN (R 4.2.1)\n tidyselect       1.2.0   2022-10-10 [3] CRAN (R 4.2.1)\n tidyverse      * 1.3.1   2021-04-15 [1] CRAN (R 4.2.0)\n tzdb             0.3.0   2022-03-28 [3] CRAN (R 4.1.3)\n utf8             1.2.2   2021-07-24 [3] CRAN (R 4.1.0)\n vctrs            0.5.0   2022-10-22 [1] CRAN (R 4.2.1)\n withr            2.5.0   2022-03-03 [3] CRAN (R 4.1.3)\n xfun             0.34    2022-10-18 [1] CRAN (R 4.2.1)\n xml2             1.3.3   2021-11-30 [3] CRAN (R 4.1.2)\n yaml             2.3.6   2022-10-18 [1] CRAN (R 4.2.1)\n\n [1] /home/pjpv/R/x86_64-pc-linux-gnu-library/4.2\n [2] /usr/local/lib/R/site-library\n [3] /usr/lib/R/site-library\n [4] /usr/lib/R/library\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "posts/post_02_pinguinos.html",
    "href": "posts/post_02_pinguinos.html",
    "title": "Los pingüinos molan (II)",
    "section": "",
    "text": "Vamos a utilizar datos del paquete palmerpenguins. El repo del paquete en CRAN está aquí, el repo de Github está aquí y la página web del paquete está aquí.\nLos datos se pueden cargar en la memoria de de R/RStudio de esta forma:\n\n# install.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\ndf <- palmerpenguins::penguins\n\nEl dataset contiene observaciones sobre un conjunto de 344 pingüinos de 3 especies. Hay 8 variables."
  },
  {
    "objectID": "posts/post_02_pinguinos.html#los-pingüinos-molan",
    "href": "posts/post_02_pinguinos.html#los-pingüinos-molan",
    "title": "Los pingüinos molan (II)",
    "section": "\n2 Los pingüinos molan",
    "text": "2 Los pingüinos molan\nVamos a ver una foto de un pingüinos\n\n\n\n\n\nUn pingüino chulo\n\n\nSí, lo pingüinos molan, así que vamos a poner otra foto de pingüinos que tenemos en nuestro PC pero la vamos a poner en el margen:"
  },
  {
    "objectID": "posts/post_02_pinguinos.html#algunos-gráficos",
    "href": "posts/post_02_pinguinos.html#algunos-gráficos",
    "title": "Los pingüinos molan (II)",
    "section": "\n3 Algunos gráficos",
    "text": "3 Algunos gráficos\nBueno pues vamos a hacer algún gráfico, pero claro antes he de cargar los paquetes\n\nlibrary(tidyverse)\n\nArreglo los datos\n\n#- cojos datos de pingüinos y arreglo un poco \ndf <- palmerpenguins::penguins %>% \n  dplyr::select(species, bill_depth_mm, body_mass_g) %>% \n  tidyr::drop_na()\n\n\n3.1 Primer gráfico\n\n#- primer gráfico\np <- ggplot(data = df, \n       mapping = aes(x = bill_depth_mm, y = body_mass_g, color = species)) +\n     geom_point()\np\n\n\n\n\n\n\n\n\n3.2 Segundo\n\n#- segundo gráfico\np <- p + geom_smooth(method = \"lm\", se = FALSE) \n\np\n\n\n\n\n\n\n\n\n3.3 El último\n\n#- tercer gráfico\np + geom_smooth(method = \"lm\", se = FALSE, color = \"black\") \n\n\n\n\n\n\n\n\nCon esto acabo mi trabajo para BigData!!\n\nAbajo muestro mi entorno de trabajo y paquetes utilizados\n\n\n current session info \n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.2.1 (2022-06-23)\n os       Ubuntu 20.04.5 LTS\n system   x86_64, linux-gnu\n ui       X11\n language (EN)\n collate  es_ES.UTF-8\n ctype    es_ES.UTF-8\n tz       Europe/Madrid\n date     2022-11-18\n pandoc   2.18 @ /usr/lib/rstudio/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package        * version date (UTC) lib source\n assertthat       0.2.1   2019-03-21 [3] CRAN (R 4.0.0)\n backports        1.4.1   2021-12-13 [3] CRAN (R 4.1.2)\n broom            1.0.1   2022-08-29 [3] CRAN (R 4.2.1)\n cellranger       1.1.0   2016-07-27 [3] CRAN (R 4.0.0)\n cli              3.4.1   2022-09-23 [3] CRAN (R 4.2.1)\n clipr            0.8.0   2022-02-22 [3] CRAN (R 4.1.2)\n colorspace       2.0-3   2022-02-21 [3] CRAN (R 4.1.2)\n crayon           1.5.2   2022-09-29 [3] CRAN (R 4.2.1)\n DBI              1.1.3   2022-06-18 [3] CRAN (R 4.2.1)\n dbplyr           2.2.1   2022-06-27 [3] CRAN (R 4.2.1)\n desc             1.4.1   2022-03-06 [1] CRAN (R 4.2.0)\n details          0.3.0   2022-03-27 [1] CRAN (R 4.2.1)\n digest           0.6.30  2022-10-18 [1] CRAN (R 4.2.1)\n dplyr          * 1.0.10  2022-09-01 [1] CRAN (R 4.2.1)\n ellipsis         0.3.2   2021-04-29 [3] CRAN (R 4.0.5)\n evaluate         0.17    2022-10-07 [3] CRAN (R 4.2.1)\n fansi            1.0.3   2022-03-24 [3] CRAN (R 4.1.3)\n farver           2.1.1   2022-07-06 [3] CRAN (R 4.2.1)\n fastmap          1.1.0   2021-01-25 [3] CRAN (R 4.0.3)\n forcats        * 0.5.2   2022-08-19 [3] CRAN (R 4.2.1)\n fs               1.5.2   2021-12-08 [3] CRAN (R 4.1.2)\n generics         0.1.3   2022-07-05 [3] CRAN (R 4.2.1)\n ggplot2        * 3.3.6   2022-05-03 [3] CRAN (R 4.2.0)\n glue             1.6.2   2022-02-24 [3] CRAN (R 4.1.2)\n gtable           0.3.1   2022-09-01 [1] CRAN (R 4.2.1)\n haven            2.5.1   2022-08-22 [3] CRAN (R 4.2.1)\n hms              1.1.2   2022-08-19 [3] CRAN (R 4.2.1)\n htmltools        0.5.3   2022-07-18 [3] CRAN (R 4.2.1)\n htmlwidgets      1.5.4   2021-09-08 [1] CRAN (R 4.2.0)\n httr             1.4.4   2022-08-17 [3] CRAN (R 4.2.1)\n jsonlite         1.8.3   2022-10-21 [1] CRAN (R 4.2.1)\n knitr            1.40    2022-08-24 [1] CRAN (R 4.2.1)\n labeling         0.4.2   2020-10-20 [3] CRAN (R 4.0.3)\n lattice          0.20-45 2021-09-22 [4] CRAN (R 4.2.0)\n lifecycle        1.0.3   2022-10-07 [3] CRAN (R 4.2.1)\n lubridate        1.8.0   2021-10-07 [3] CRAN (R 4.1.1)\n magrittr         2.0.3   2022-03-30 [3] CRAN (R 4.1.3)\n Matrix           1.5-1   2022-09-13 [4] CRAN (R 4.2.1)\n mgcv             1.8-40  2022-03-29 [4] CRAN (R 4.1.3)\n modelr           0.1.9   2022-08-19 [3] CRAN (R 4.2.1)\n munsell          0.5.0   2018-06-12 [3] CRAN (R 4.0.0)\n nlme             3.1-160 2022-10-10 [4] CRAN (R 4.2.1)\n palmerpenguins * 0.1.0   2020-07-23 [1] CRAN (R 4.2.0)\n pillar           1.8.1   2022-08-19 [3] CRAN (R 4.2.1)\n pkgconfig        2.0.3   2019-09-22 [3] CRAN (R 4.0.0)\n png              0.1-7   2013-12-03 [1] CRAN (R 4.2.0)\n purrr          * 0.3.5   2022-10-06 [3] CRAN (R 4.2.1)\n R6               2.5.1   2021-08-19 [3] CRAN (R 4.1.1)\n readr          * 2.1.3   2022-10-01 [3] CRAN (R 4.2.1)\n readxl           1.4.1   2022-08-17 [3] CRAN (R 4.2.1)\n reprex           2.0.2   2022-08-17 [3] CRAN (R 4.2.1)\n rlang            1.0.6   2022-09-24 [1] CRAN (R 4.2.1)\n rmarkdown        2.17    2022-10-07 [3] CRAN (R 4.2.1)\n rprojroot        2.0.3   2022-04-02 [1] CRAN (R 4.2.0)\n rstudioapi       0.14    2022-08-22 [3] CRAN (R 4.2.1)\n rvest            1.0.3   2022-08-19 [3] CRAN (R 4.2.1)\n scales           1.2.1   2022-08-20 [3] CRAN (R 4.2.1)\n sessioninfo      1.2.2   2021-12-06 [1] CRAN (R 4.2.0)\n stringi          1.7.8   2022-07-11 [3] CRAN (R 4.2.1)\n stringr        * 1.4.1   2022-08-20 [3] CRAN (R 4.2.1)\n tibble         * 3.1.8   2022-07-22 [1] CRAN (R 4.2.1)\n tidyr          * 1.2.1   2022-09-08 [3] CRAN (R 4.2.1)\n tidyselect       1.2.0   2022-10-10 [3] CRAN (R 4.2.1)\n tidyverse      * 1.3.1   2021-04-15 [1] CRAN (R 4.2.0)\n tzdb             0.3.0   2022-03-28 [3] CRAN (R 4.1.3)\n utf8             1.2.2   2021-07-24 [3] CRAN (R 4.1.0)\n vctrs            0.5.0   2022-10-22 [1] CRAN (R 4.2.1)\n withr            2.5.0   2022-03-03 [3] CRAN (R 4.1.3)\n xfun             0.34    2022-10-18 [1] CRAN (R 4.2.1)\n xml2             1.3.3   2021-11-30 [3] CRAN (R 4.1.2)\n yaml             2.3.6   2022-10-18 [1] CRAN (R 4.2.1)\n\n [1] /home/pjpv/R/x86_64-pc-linux-gnu-library/4.2\n [2] /usr/local/lib/R/site-library\n [3] /usr/lib/R/site-library\n [4] /usr/lib/R/library\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "Readme.html",
    "href": "Readme.html",
    "title": "儒雅随和",
    "section": "",
    "text": "Repo utilizado para elaborar el trabajo en equipo para la asignatura “Programación y manejo de datos en la era del Big Data” de la Universitat de València durante el curso 2022-2023. La página web de la asignatura puede verse aquí: https://perezp44.github.io/intro-ds-22-23-web/.\n\nLa versión final del trabajo puede visualizarse en: https://Alonsoqiu.github.io/trabajo_BigData_equipo/.\n\nEl título del trabajo es ….. En el trabajo hago …. blah-blah …"
  }
]